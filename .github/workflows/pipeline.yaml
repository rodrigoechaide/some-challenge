name: "some-challenge pipeline"
on:
  push:
    branches:
    - main
    - dev
  pull_request:
    branches:
    - main
    - dev
jobs:
  some-challenge-pipeline:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v2
      - name: set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: "install unit-tests dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt
        working-directory: hello/tests
      - name: "run unit-tests"
        run: python -m unittest -v
        working-directory: hello/tests
      - name: "install terraform"
        uses: hashicorp/setup-terraform@v1
      - name: "terraform initialization"
        run: terraform init
      - name: "select proper terraform workspace"
        run: terraform workspace select ${GITHUB_REF##*/}
        if: github.event_name == 'push'
      - name: "select proper terraform workspace"
        run: terraform workspace select ${{ github.base_ref }}
        if: github.event_name == 'pull_request'
      - name: "validate terraform code"
        run: terraform validate
      - name: "terraform plan"
        run: terraform plan -out=terraform.plan
      - name: "terraform automatic apply"
        run: terraform apply -auto-approve terraform.plan
        if: github.event_name == 'push'